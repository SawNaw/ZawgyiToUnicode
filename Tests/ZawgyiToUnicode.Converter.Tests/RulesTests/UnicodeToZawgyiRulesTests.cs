using NUnit.Framework;
using ZawgyiToUnicode.ConversionRules;

namespace ZawgyiToUnicode.Converter.Tests.ConvertTests
{
    public class UnicodeToZawgyiRulesTests
    {
        [TestCase("\u1004\u103a\u1039", "\u1064")]
        [TestCase("\u1039\u1010\u103d", "\u1096")]
        [TestCase("\u102b\u103a", "\u105a")]
        [TestCase("\u102d\u1036", "\u108e")]
        [TestCase("\u104e\u1004\u103a\u1038", "\u104e")]
        [TestCase("[\u1025\u1009](?=\u1039)", "\u106a")]
        [TestCase("\u1009(?=[\u102f\u1030])", "\u1025")]
        [TestCase("[\u1025\u1009](?=[\u1037]?[\u103a])", "\u1025")]
        [TestCase("\u100a(?=[\u1039\u103d])", "\u106b")]
        [TestCase("(\u1039[\u1000-\u1021])(\u102D)0,1}\u102f", "$1$2\u1033")]
        [TestCase("(\u1039[\u1000-\u1021])\u1030", "$1\u1034")]
        [TestCase("\u1014(?=[\u102d\u102e\u102f\u103A]?[\u1030\u103d\u103e\u102f\u1039])", "\u108f")]
        [TestCase("\u1014(?=\u103A\u102F )", "\u108f")]
        [TestCase("\u1014\u103c", "\u108f\u103c")]
        [TestCase("\u1039\u1000", "\u1060")]
        [TestCase("\u1039\u1001", "\u1061")]
        [TestCase("\u1039\u1002", "\u1062")]
        [TestCase("\u1039\u1003", "\u1063")]
        [TestCase("\u1039\u1005", "\u1065")]
        [TestCase("\u1039\u1006", "\u1066")]
        [TestCase("\u1039\u1007", "\u1068")]
        [TestCase("\u1039\u1008", "\u1069")]
        [TestCase("\u1039\u100b", "\u106c")]
        [TestCase("\u100b\u1039\u100c", "\u1092")]
        [TestCase("\u1039\u100c", "\u106d")]
        [TestCase("\u100d\u1039\u100d", "\u106e")]
        [TestCase("\u100d\u1039\u100e", "\u106f")]
        [TestCase("\u1039\u100f", "\u1070")]
        [TestCase("\u1039\u1010", "\u1071")]
        [TestCase("\u1039\u1011", "\u1073")]
        [TestCase("\u1039\u1012", "\u1075")]
        [TestCase("\u1039\u1013", "\u1076")]
        [TestCase("\u1039[\u1014\u108f]", "\u1077")]
        [TestCase("\u1039\u1015", "\u1078")]
        [TestCase("\u1039\u1016", "\u1079")]
        [TestCase("\u1039\u1017", "\u107a")]
        [TestCase("\u1039\u1018", "\u107b")]
        [TestCase("\u1039\u1019", "\u107c")]
        [TestCase("\u1039\u101c", "\u1085")]
        [TestCase("\u103f", "\u1086")]
        [TestCase("\u103d\u103e", "\u108a")]
        [TestCase("(\u1064)([\u1000-\u1021])([\u103b\u103c]?)\u102d", "$2$3\u108b")]
        [TestCase("(\u1064)([\u1000-\u1021])([\u103b\u103c]?)\u102e", "$2$3\u108c")]
        [TestCase("(\u1064)([\u1000-\u1021])([\u103b\u103c]?)\u1036", "$2$3\u108d")]
        [TestCase("(\u1064)([\u1000-\u1021\u1040-\u1049])([\u103b\u103c]?)([\u1031]?)", "$2$3$4$1")]
        [TestCase("\u101b(?=([\u102d\u102e]?)[\u102f\u1030\u103d\u108a])", "\u1090")]
        [TestCase("\u100f\u1039\u100d", "\u1091")]
        [TestCase("\u100b\u1039\u100b", "\u1097")]
        [TestCase("([\u1000-\u1021\u108f\u1029\u106e\u106f\u1086\u1090\u1091\u1092\u1097])([\u1060-\u1069\u106c\u106d\u1070-\u107c\u1085\u108a])?([\u103b-\u103e]*)?\u1031", "\u1031$1$2$3")]
        [TestCase("\u103c\u103e", "\u103c\u1087")]
        [TestCase("([\u1000-\u1021\u108f\u1029])([\u1060-\u1069\u106c\u106d\u1070-\u107c\u1085])?(\u103c)", "$3$1$2")]
        [TestCase("\u103a", "\u1039")]
        [TestCase("\u103b", "\u103a")]
        [TestCase("\u103c", "\u103b")]
        [TestCase("\u103d", "\u103c")]
        [TestCase("\u103e", "\u103d")]
        [TestCase("([^\u103a\u100a])\u103d([\u102d\u102e]?)\u102f", "$1\u1088$2")]
        [TestCase("([\u101b\u103a\u103c\u108a\u1088\u1090])([\u1030\u103d])?([\u1032\u1036\u1039\u102d\u102e\u108b\u108c\u108d\u108e]?)(\u102f)?\u1037", "$1$2$3$4\u1095")]
        [TestCase("([\u102f\u1014\u1030\u103d])([\u1032\u1036\u1039\u102d\u102e\u108b\u108c\u108d\u108e]?)\u1037", "$1$2\u1094")]
        [TestCase("([\u103b])([\u1000-\u1021])([\u1087]?)([\u1036\u102d\u102e\u108b\u108c\u108d\u108e]?)\u102f", "$1$2$3$4\u1033")]
        [TestCase("([\u103b])([\u1000-\u1021])([\u1087]?)([\u1036\u102d\u102e\u108b\u108c\u108d\u108e]?)\u1030", "$1$2$3$4\u1034")]
        [TestCase("([\u103a\u103c\u100a\u1008\u100b\u100c\u100d\u1020\u1025])([\u103d]?)([\u1036\u102d\u102e\u108b\u108c\u108d\u108e]?)\u102f", "$1$2$3\u1033")]
        [TestCase("([\u103a\u103c\u100a\u1008\u100b\u100c\u100d\u1020\u1025])(\u103d?)([\u1036\u102d\u102e\u108b\u108c\u108d\u108e]?)\u1030", "$1$2$3\u1034")]
        [TestCase("([\u100a\u1020\u1009])\u103d", "$1\u1087")]
        [TestCase("\u103d\u1030", "\u1089")]
        [TestCase("\u103b([\u1000\u1003\u1006\u100f\u1010\u1011\u1018\u101a\u101c\u101a\u101e\u101f])", "\u107e$1")]
        [TestCase("\u107e([\u1000\u1003\u1006\u100f\u1010\u1011\u1018\u101a\u101c\u101a\u101e\u101f])([\u103c\u108a])([\u1032\u1036\u102d\u102e\u108b\u108c\u108d\u108e])", "\u1084$1$2$3")]
        [TestCase("\u107e([\u1000\u1003\u1006\u100f\u1010\u1011\u1018\u101a\u101c\u101a\u101e\u101f])([\u103c\u108a])", "\u1082$1$2")]
        [TestCase("\u107e([\u1000\u1003\u1006\u100f\u1010\u1011\u1018\u101a\u101c\u101a\u101e\u101f])([\u1033\u1034]?)([\u1032\u1036\u102d\u102e\u108b\u108c\u108d\u108e])", "\u1080$1$2$3")]
        [TestCase("\u103b([\u1000-\u1021])([\u103c\u108a])([\u1032\u1036\u102d\u102e\u108b\u108c\u108d\u108e])", "\u1083$1$2$3")]
        [TestCase("\u103b([\u1000-\u1021])([\u103c\u108a])", "\u1081$1$2")]
        [TestCase("\u103b([\u1000-\u1021])([\u1033\u1034]?)([\u1032\u1036\u102d\u102e\u108b\u108c\u108d\u108e])", "\u107f$1$2$3")]
        [TestCase("\u103a\u103d", "\u103d\u103a")]
        [TestCase("\u103a([\u103c\u108a])", "$1\u107d")]
        [TestCase("([\u1033\u1034])(\u1036?)\u1094", "$1$2\u1095")]
        [TestCase("\u108F\u1071", "\u108F\u1072")]
        [TestCase("([\u1000-\u1021])([\u107B\u1066])\u102C", "$1\u102C$2")]
        [TestCase("\u102C([\u107B\u1066])\u1037", "\u102C$1\u1094")]
        [TestCase("\u1047((?=[\u1000-\u1021]\u1039)|(?=[\u102c-\u1030\u1032\u1036-\u1038\u103c\u103d]))", "\u101b")]
        public void ToZawgyi_ReturnsZawgyiEquivalent(string unicode, string expectedZawgyi)
        {
            Assert.That(Rules.UnicodeToZawgyiRules[unicode], Is.EqualTo(expectedZawgyi));
        }
    }
}

